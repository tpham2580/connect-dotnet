name: .NET Microservices CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 8 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore MySolution.sln

      - name: Build all projects
        run: dotnet build MySolution.sln --no-restore --configuration Release

      - name: Run tests
        run: dotnet test MySolution.sln --no-build --verbosity normal

  # OPTIONAL: Uncomment if you want to build and push Docker images
  # docker-build-and-push:
  #   needs: build-and-test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Build and push BusinessService image
  #       run: |
  #         docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/businessservice:latest ./BusinessService
  #         docker push ${{ secrets.DOCKERHUB_USERNAME }}/businessservice:latest

  #     - name: Build and push LocationService image
  #       run: |
  #         docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/locationservice:latest ./LocationService
  #         docker push ${{ secrets.DOCKERHUB_USERNAME }}/locationservice:latest

  #     - name: Build and push RestAPI image
  #       run: |
  #         docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/restapi:latest ./RestAPI
  #         docker push ${{ secrets.DOCKERHUB_USERNAME }}/restapi:latest
